name: Generate and Share GUID via Gist

on: [push]

jobs:
  generate-and-share-guid:
    runs-on: ubuntu-latest
    steps:
      - name: Generate GUID
        id: guid
        run: echo "guid=$(uuidgen)" >> $GITHUB_OUTPUT

      - name: Print GUID
        run: | 
            echo "GUID: ${{ steps.guid.outputs.guid }}"

      - name: Create or Update Gist
        id: gist
        env:
          GIST_TOKEN: ${{ secrets.gist_token }}
        run: |
          if [ -z "$GIST_ID" ]; then
            # Create a new Gist
            RESPONSE=$(curl -X POST -H "Authorization: token $GIST_TOKEN" \
              -d '{"files": {"guid.txt": {"content": "${{ steps.guid.outputs.guid }}"}}}' \
              "https://api.github.com/gists")
            NEW_GIST_ID=$(echo $RESPONSE | jq -r '.id')
            echo "New Gist created: $NEW_GIST_ID"
            echo "GIST_ID=$NEW_GIST_ID" >> $GITHUB_OUTPUT
          else
            # Update existing Gist
            curl -X PATCH -H "Authorization: token $GIST_TOKEN" \
              -d '{"files": {"guid.txt": {"content": "${{ steps.guid.outputs.guid }}"}}}' \
              "https://api.github.com/gists/$GIST_ID"
            echo "Gist updated: $GIST_ID"
          fi

      - name: Retrieve GUID from Gist
        id: gistread
        env:
          GIST_TOKEN: ${{ secrets.gist_token }}
          GIST_ID: ${{ steps.gist.outputs.GIST_ID }} 
        run: |
          curl -H "Authorization: token $GIST_TOKEN" \
            "https://api.github.com/gists/$GIST_ID" > gist.json
          GUID=$(jq -r '.files["guid.txt"].content' gist.json)
          echo "GU_ID=$GUID" >> $GITHUB_OUTPUT

      - name: Use GUID
        run: echo "Using GUID ${{ steps.gistread.outputs.GU_ID }}"

    #   - name: Install jq
    #     run: sudo apt-get install jq # Install jq for JSON parsing

    #   - name: Fetch Gist Content
    #     env:
    #       GIST_ID: ${{ steps.gist.outputs.guid }} # Replace with your actual Gist ID
    #       GIST_FILENAME: 'guid.txt' # Replace with your actual file name in the Gist
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Using the built-in GITHUB_TOKEN for authentication
    #     run: |
    #       # Fetch the Gist data using GitHub API
    #       curl -H "Authorization: token $GITHUB_TOKEN" \
    #            -H "Accept: application/vnd.github.v3+json" \
    #            "https://api.github.com/gists/${GIST_ID}" > gist.json
          
    #       # Extract the content of the specific file from the Gist
    #       CONTENT=$(jq -r .files."${GIST_FILENAME}".content gist.json)
          
    #       echo "Content of ${GIST_FILENAME}:"
    #       echo "$CONTENT"
