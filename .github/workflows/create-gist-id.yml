name: Generate and Share GUID via Gist

on: [push]

jobs:
  generate-and-share-guid:
    runs-on: ubuntu-latest
    steps:
      - name: Generate GUID
        id: guid
        run: echo "guid=$(uuidgen)" >> $GITHUB_OUTPUT

      - name: Print GUID
        run: | 
            echo "GUID: ${{ steps.guid.outputs.guid }}"

      - name: Create or Update Gist
        env:
          GIST_TOKEN: ${{ secrets.gist_token }}
          GIST_ID: ${{ secrets.GIST_ID }}
        run: |
          if [ -z "$GIST_ID" ]; then
            # Create a new Gist
            RESPONSE=$(curl -X POST -H "Authorization: token $GIST_TOKEN" \
              -d '{"files": {"guid.txt": {"content": "${{ steps.guid.outputs.guid }}"}}}' \
              "https://api.github.com/gists")
            NEW_GIST_ID=$(echo $RESPONSE | jq -r '.id')
            echo "New Gist created: $NEW_GIST_ID"
            echo "GIST_ID=$NEW_GIST_ID" >> $GITHUB_ENV
          else
            # Update existing Gist
            curl -X PATCH -H "Authorization: token $GIST_TOKEN" \
              -d '{"files": {"guid.txt": {"content": "${{ steps.guid.outputs.guid }}"}}}' \
              "https://api.github.com/gists/$GIST_ID"
            echo "Gist updated: $GIST_ID"
          fi

      - name: Retrieve GUID from Gist
        id: gist
        env:
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
          GIST_ID: ${{ secrets.GIST_ID }}
        run: |
          curl -H "Authorization: token $GIST_TOKEN" \
            "https://api.github.com/gists/$GIST_ID" > gist.json
          GUID=$(jq -r '.files["guid.txt"].content' gist.json)
          echo "name=guid::$GUID" >> $GITHUB_OUTPUT

      - name: Use GUID
        run: echo "Using GUID ${{ steps.gist.outputs.guid }}"
